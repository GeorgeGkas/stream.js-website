function Stream(a,b){"undefined"!=typeof a&&(this.headValue=a);"undefined"==typeof b&&(b=function(){return new Stream});this.tailPromise=b}
Stream.prototype={empty:function(){return"undefined"==typeof this.headValue},head:function(){if(this.empty())throw Error("Cannot get the head of the empty stream.");return this.headValue},tail:function(){if(this.empty())throw Error("Cannot get the tail of the empty stream.");return this.tailPromise()},item:function(a){if(this.empty())throw Error("Cannot use item() on an empty stream.");for(var b=this;0!=a;){--a;try{b=b.tail()}catch(c){throw Error("Item index does not exist in stream.");}}try{return b.head()}catch(c){throw Error("Item index does not exist in stream.");
}},length:function(){for(var a=this,b=0;!a.empty();)++b,a=a.tail();return b},add:function(a){return this.zip(function(a,c){return a+c},a)},append:function(a){if(this.empty())return a;var b=this;return new Stream(b.head(),function(){return b.tail().append(a)})},zip:function(a,b){if(this.empty())return b;if(b.empty())return this;var c=this;return new Stream(a(b.head(),this.head()),function(){return c.tail().zip(a,b.tail())})},map:function(a){if(this.empty())return this;var b=this;return new Stream(a(this.head()),
function(){return b.tail().map(a)})},concatmap:function(a){return this.reduce(function(b,c){return b.append(a(c))},new Stream)},reduce:function(){var a=arguments[0],b,c;if(2>arguments.length){if(this.empty())throw new TypeError("Array length is 0 and no second argument");b=this.head();c=this.tail()}else b=arguments[1],c=this;return c.empty()?b:c.tail().reduce(a,a(b,c.head()))},sum:function(){return this.reduce(function(a,b){return a+b},0)},walk:function(a){this.map(function(b){a(b);return b}).force()},
force:function(){for(var a=this;!a.empty();)a=a.tail()},scale:function(a){return this.map(function(b){return a*b})},filter:function(a){if(this.empty())return this;var b=this.head(),c=this.tail();return a(b)?new Stream(b,function(){return c.filter(a)}):c.filter(a)},take:function(a){if(this.empty())return this;if(0==a)return new Stream;var b=this;return new Stream(this.head(),function(){return b.tail().take(a-1)})},drop:function(a){for(var b=this;0<a--;){if(b.empty())return new Stream;b=b.tail()}return new Stream(b.headValue,
b.tailPromise)},member:function(a){for(var b=this;!b.empty();){if(b.head()==a)return!0;b=b.tail()}return!1},print:function(a){("undefined"!=typeof a?this.take(a):this).walk(function(a){console.log(a)})},toString:function(){return"[stream head: "+this.head()+"; tail: "+this.tail()+"]"}};Stream.makeOnes=function(){return new Stream(1,Stream.makeOnes)};Stream.makeNaturalNumbers=function(){return new Stream(1,function(){return Stream.makeNaturalNumbers().add(Stream.makeOnes())})};
Stream.make=function(){if(0==arguments.length)return new Stream;var a=Array.prototype.slice.call(arguments,1);return new Stream(arguments[0],function(){return Stream.make.apply(null,a)})};Stream.fromArray=function(a){return 0==a.length?new Stream:new Stream(a[0],function(){return Stream.fromArray(a.slice(1))})};Stream.range=function(a,b){"undefined"==typeof a&&(a=1);return a==b?Stream.make(a):new Stream(a,function(){return Stream.range(a+1,b)})};
Stream.equals=function(a,b){if(!(a instanceof Stream&&b instanceof Stream))return!1;if(a.empty()&&b.empty())return!0;if(a.empty()||b.empty())return!1;if(a.head()===b.head())return Stream.equals(a.tail(),b.tail())};
